"use-strict";
//check plus space is 102
let a,b,c,d,e,f,g,h,i,j,k,l,m,n,o, ttl;

//subtract part of string inside p tage
a = selectorAll('.fl-amo3xxxs');	
e = selector('.fxlsl4ee'); //input	
f = selector('.xli43ofires3ss'); //button
o = selector('.alsdiosadlalsd');
let notify = selector('.fa-renhex');
let txt = selector('.txt-notify');
ttl = selector('.ttl93943xffaed');
let xks = document.querySelector('.fpro8vvv83xi3sddf');
let curr = document.querySelector('.fn-3439affs');
// e = selector('.fl-amo3xxxs');

function taskLenght(){
	a.forEach((task, i) => {
		b = task.innerHTML;
		if(task.innerHTML.length >= 102){
			c = b.substring(0, 102);
			task.innerHTML = c + '....';
		}
		
	})
}

function updateSlider(){
	let task = getTask().length;
		task = task ? task : 0;
	xks.style.setProperty('width', `${(getCompleted() / task) * 100}%`);
	curr.innerHTML = getCompleted();
}

function getCompleted(){
	let task = getTask();
	return task.filter(tasks => tasks.iscomplete === true).length;
}

b = selectorAll('.xsld343000dff-asadd');
b.forEach((c, i) => {
	c.addEventListener('click', function(){
		d = selectorAll('.fl-amo3xxxs')[i];
		if(this.checked){
			d.classList.add('fx-129499433'); //add strike text effect to element
		}else{
			d.classList.remove('fx-129499433'); //remove strike text color effect from element
		}
	})
})


//handle clicck eventlistner here on button
// alert(f)
f.addEventListener('click', function(){
	g = e.value.trim(); //get text from input
	if(g == '' || g.lenght <= 0){
		notify.classList.add('xkwkxks');
		notify.classList.remove('xkjwi32hh');
		notify.querySelector('h5').innerHTML = 'Enter your tasks... Task should not be empty!';
		//alert(n)
		setTimeout(() =>{
			notify.classList.remove('xkwkxks');
			notify.classList.add('xkjwi32hh');
		}, 3000)
		return;
	}
	saveTask(g, false); //save task to storeage	
	updateTask(g, false); //update my dom content here
	selector('.fxlsl4ee').value = ''; //empty out task input
	ttl.innerHTML = getTask().length;
	updateSlider();

})

e.addEventListener('keyup', function(event){
	if(event.key == 'Enter'){
		f.click(); //fire this event when someone click ender key
	}
	
})



function updateTask(tsk, status){
	let wrapperh = newElement('div');
		wrapperh.className = "xlsl4i4s343 p-2";
			h = newElement('div');
			h.className = 'ckoalskssfvr chk';
			
			i = newElement('input');
			i.className = 'xsld343000dff-asadd';
			i.type = 'checkbox';
			if(status == true){
				 cls = "fx-129499433";
			}else{
				cls = '';
			}
			i.checked = status
			i.addEventListener('change', function(event){
				toggleCompleteInAndOut(tsk, this.checked, event);
			});
			h.appendChild(i);
		wrapperh.appendChild(h);
		let tskTask = tsk;
		//second task area staqrt
		j = newElement('div');
		j.className = 'xstxtxtl30ssf-3fs';
			k = newElement('p');
			k.className = 'fl-amo3xxxs ' + cls;
			k.title = tsk;
			if(tsk.length > 102){
				
				tsk = tsk.substring(0, 102) + '....';
				
			}else{
				tsk = tsk;
			}
			k.innerHTML = tsk;
		j.appendChild(k);
		wrapperh.appendChild(j);

		l = newElement('div');
		l.className = 'todo-del';
			m = newElement('span');
			m.className = 'sedit-s232s ed-233999sefzxxy';
				m.innerHTML = `<i class="fas fa-edit fa-2x"></i>`;

			m.addEventListener('click', function(){
				
				editTask(this);
			})
			n = newElement('span');
			n.className = 'sedit-s232s ed-233999sefzxxy';
				n.innerHTML = `<i class="fas fa-trash-alt fa-2x"></i>`;
			n.addEventListener('click', function(){
				removeTask(tskTask);
			})
		l.appendChild(m);
		l.appendChild(n);
		wrapperh.appendChild(l);
	// o.innerHTML = '';
	o.insertAdjacentElement('afterbegin', wrapperh);
}

// console.log(updateTask('how are your doing'));

function getTask(){
	let task = localStorage.getItem('Iyakise_ToDo');
	return task ? JSON.parse(task) : [];
}

function saveTask(tsk, status){
	let task = getTask();
		task.push({'task': tsk, 'iscomplete': status});

		localStorage.setItem('Iyakise_ToDo', JSON.stringify(task));
}

function removeTask(tsk){
	//alert(tsk)
	let task = getTask();
	let	newTxt = task.filter(task => task.task !== tsk); // Remove the task
		localStorage.setItem('Iyakise_ToDo', JSON.stringify(newTxt)); // Update local storage

		ttl.innerHTML = getTask().length; //update DOM TO SHOW REMAINING TASK
		updateTaskBasedOnStorage();
}

function editTask(ev){
	let  xls = ev.parentNode.parentNode.querySelector('.fl-amo3xxxs');
	
	let task = getTask();
		xls.setAttribute('contenteditable', true);
		xls.addEventListener('blur', function(){
			removeContentEditable(this); //remove content editable envent here
		})
		xls.focus();
		xls.parentElement.classList.add('editTaskActive'); //add this to parent element
		xls.innerHTML = xls.getAttribute('title');
		let currTask = xls.getAttribute('title');
//show notification here for users to know that
		notify.classList.add('xkwkxks');
		notify.classList.remove('xkjwi32hh');
		notify.querySelector('h5').innerHTML = 'Edit Mode is Active, You can now start editing your task!';

		setTimeout(() => {
			notify.classList.remove('xkwkxks');
			notify.classList.add('xkjwi32hh');
		}, 3000)

		xls.addEventListener('keyup', function(event){
			let afterEdit = this.innerHTML.replace('<div><br></div>', '');
			if(event.key == 'Enter'){
				task.filter((tsk, id) =>{
						if(tsk.task === currTask){
							task[id].task = afterEdit;
							localStorage.setItem('Iyakise_ToDo', JSON.stringify(task));
						}
					xls.removeAttribute('contenteditable');
				});
			}
		})
}

function toggleCompleteInAndOut(tasks, cmpl, ev){
	f = ev.target.parentNode.parentElement.querySelector('.fl-amo3xxxs');
	let task = getTask();
		task.forEach((tsk, i) => {
			// alert(tsk.iscomplete)
			// return
			if(tsk.task === tasks){
				tsk.iscomplete = cmpl;
			}
		})

		if(cmpl){
			f.classList.add('fx-129499433'); //add strike text effect to element
		}else{
			f.classList.remove('fx-129499433'); //add strike text effect to element
		}

	localStorage.setItem('Iyakise_ToDo', JSON.stringify(task));
	updateSlider();

}

function TaskComplete(){
	// alert('somethin happend')
	let pr = this.parentNode.parentNode
	d = pr.querySelector('.fl-amo3xxxs');
		if(this.checked){
			d.classList.add('fx-129499433'); //add strike text effect to element
		}else{
			d.classList.remove('fx-129499433'); //remove strike text color effect from element
		}


}

//call this immediatly content load
window.addEventListener('DOMContentLoaded', updateTaskBasedOnStorage);

// console.log(getTask());
function updateTaskBasedOnStorage(){
	let tasks = getTask();
		tasks.forEach((tsk, i) => {
			updateTask(tsk.task, tsk.iscomplete);

			// alert(tsk.iscomplete)

			ttl.innerHTML = getTask().length;
		})
	updateSlider();
}

function removeContentEditable(d){
	d.removeAttribute('contenteditable');
	d.parentElement.classList.remove('editTaskActive');

	//show notification here for users to know that
	notify.classList.add('xkwkxks');
	notify.classList.remove('xkjwi32hh');
	notify.querySelector('h5').innerHTML = 'Your Task has been saved Successfully. Edit mode has been turn-Off';

	setTimeout(() => {
		notify.classList.remove('xkwkxks');
		notify.classList.add('xkjwi32hh');
	}, 3000)
}
	
function selectorAll(d){
	return document.querySelectorAll(d);
}

function selector(d){
	return document.querySelector(d);
}

function newElement(d){
	return document.createElement(d);
}